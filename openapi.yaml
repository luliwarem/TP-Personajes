openapi: 3.0.3
info:
  title: API de peliculas y series 3.0
  termsOfService: http://swagger.io/terms/
  version: 1.0.11
tags:
  - name: authentication
    description: Generating token
   
  - name: peliculas
    description: Endpoints de peliculas
    
  - name: personajes
    description: Endpoints de personajes
paths:
  /auth/login:
    get:
      tags:
        - authentication
      summary: Get token
      description: Generate token to authorize access
      operationId: getSignedToken
      responses:
        '200':
          description: Successful operation
  /movies:
    get:
      tags:
        - peliculas
      summary: get all movies
      description: Obtener todas las peliculas con filtro de nombre y de orden
      operationId: getAllMovies
      parameters:
        - name: name
          in: query
          description: nombre de pelicula a buscar
          schema:
            type: string
        - name: order
          in: query
          description: orden de las peliculas (ASC/DESC)
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
    post:
      tags:
        - peliculas
      summary: insert new movie
      description: Agregar una nueva pelicula
      operationId: insertMovie
      requestBody:
        description: Informacion de el personaje
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '200':
          description: Successful operation

  /movies/{id}:
    get:
      tags:
        - peliculas
      summary: get movie by id
      description: Obtener peliculas por id
      operationId: getById
      parameters:
        - name: id
          in: path
          description: Id de la pelicula a obtener
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
        '404':
          description: Id not found
    delete:
      tags:
        - peliculas
      summary: delete movie by id
      description: Eliminar peliculas por id
      operationId: deleteById
      parameters:
        - name: id
          in: path
          description: Id de la pelicula a eliminar
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
        '404':
          description: Id not found
    put:
      tags:
        - peliculas
      summary: update movie by id
      description: Actualizar infomacion de una pelicula
      operationId: updateById
      parameters:
        - name: id
          in: path
          description: Id de la pelicula a actualizar
          required: true
          schema:
            type: integer
      requestBody:
        description: Informacion de la pelicula
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '200':
          description: successful operation
        '404':
          description: Id not found
  
  /characters:
    get:
      tags:
        - personajes
      summary: get all characters
      description: Obtener todos los personajes con filtro de nombre, edad o id de la pelicula a la que pertenecen
      operationId: getAll
      parameters:
        - in: query
          name: name
          description: nombre de personaje a buscar
          schema: 
            type: string
        - in: query
          name: age
          description: edad del personaje
          schema:
            type: integer
        - name: movie
          in: query
          description: id de la pelicula
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
    post:
      tags:
        - personajes
      summary: insert new personaje
      description: Agregar una nueva Personaje
      operationId: insertPersonaje
      requestBody:
          description: The character object
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/Character"
      responses:
        '200':
          description: Successful operation


  /characters/{id}:
    get:
      tags:
        - personajes
      summary: get character by id
      description: Obtener personaje por id
      operationId: getByIdCharacter
      parameters:
        - name: id
          in: path
          description: Id de el personaje a obtener
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
        '404':
          description: Id not found
    delete:
      tags:
        - personajes
      summary: delete character by id
      description: Eliminar personajes por id
      operationId: deleteByIdCharacter
      parameters:
        - name: id
          in: path
          description: Id de el personaje a eliminar
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
        '404':
          description: Id not found
    put:
      tags:
        - personajes
      summary: update character by id
      description: Actualizar infomacion de un personaje
      operationId: updateByIdCharacter
      parameters:
        - name: id
          in: path
          description: Id de el personaje a actualizar
          required: true
          schema:
            type: integer
      requestBody:
        description: Informacion de el personaje
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Character'
      responses:
        '200':
          description: successful operation
        '404':
          description: Id not found

components:
  schemas: 
    Movie:
      type: object
      properties:
        Imagen:
          type: string
        Titulo:
          type: string
          format: date
        Calificacion:
          type: number
    Character:
      type: object
      properties:
        Imagen:
          type: string
        Nombre:
          type: string
        Edad:
          type: integer
        Peso:
          type: integer
        Historia:
          type: string
